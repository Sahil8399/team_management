{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vuex from 'vuex';\nimport store from '../store/index';\nimport data from '../api/data';\nexport default new Vuex.Store({\n  store,\n  state: {\n    students: [],\n    csk: [],\n    rcb: []\n  },\n  getters: {},\n  actions: {\n    getStudents(context) {\n      context.commit('setStudents');\n    },\n    addTeamMember(context, data) {\n      context.commit('pushMemberToState', data);\n      context.commit('enabledSelectedState', data.index);\n      // console.log(data)\n    },\n\n    removeFromTeam(context, data) {\n      context.commit('sliceFromTeam', data);\n      context.commit('disabledSelectedState', data);\n    }\n  },\n  mutations: {\n    setStudents(state) {\n      state.students = data.getStudents();\n    },\n    pushMemberToState(state, data) {\n      if (data.type == 'CSK') {\n        state.csk.push(state.students[data.index]);\n      } else {\n        state.rcb.push(state.students[data.index]);\n      }\n    },\n    enabledSelectedState(state, index) {\n      state.students[index].selected = true;\n    },\n    disabledSelectedState(state, data) {\n      state.students.forEach(student => {\n        // if(student.id === data.member.id){\n        //    return student.selected = false   \n        // }else{\n        //     return ''  \n        // }\n        student.id === data.member.id ? student.selected = false : \"\";\n      });\n    },\n    sliceFromTeam(state, data) {\n      if (data.type == 'CSK') {\n        state.csk.splice(data.index, 1);\n      } else {\n        state.rcb.splice(data.index, 1);\n      }\n    }\n  }\n});","map":{"version":3,"names":["Vuex","store","data","Store","state","students","csk","rcb","getters","actions","getStudents","context","commit","addTeamMember","index","removeFromTeam","mutations","setStudents","pushMemberToState","type","push","enabledSelectedState","selected","disabledSelectedState","forEach","student","id","member","sliceFromTeam","splice"],"sources":["/home/sahil/Desktop/vue/team_management_new/team_managemant/src/store/index.js"],"sourcesContent":["import Vuex from 'vuex';\nimport store from '../store/index'\nimport data from '../api/data'\nexport default new Vuex.Store({\n    store,\n    state:{\n        students:[],\n        csk:[],\n        rcb:[]\n    },\n    getters:{},\n    actions:{\n        getStudents(context){\n            context.commit('setStudents')\n        },\n        addTeamMember(context,data){\n            context.commit('pushMemberToState', data)\n            context.commit('enabledSelectedState', data.index)\n            // console.log(data)\n        },\n        removeFromTeam(context, data){\n            context.commit('sliceFromTeam',data)\n            context.commit('disabledSelectedState',data)\n        }\n    },\n    mutations:{\n        setStudents(state){\n            state.students = data.getStudents()\n        },\n        pushMemberToState(state, data){\n            if(data.type == 'CSK'){\n                state.csk.push(state.students[data.index])\n            }else{\n                state.rcb.push(state.students[data.index])\n            }\n        },\n        enabledSelectedState(state,index){\n            state.students[index].selected = true\n        },\n        disabledSelectedState(state,data){\n            state.students.forEach((student) => {\n                // if(student.id === data.member.id){\n                //    return student.selected = false   \n                // }else{\n                //     return ''  \n                // }\n                student.id === data.member.id ? student.selected = false : \"\";\n            })\n        },\n        sliceFromTeam(state, data){\n            if(data.type == 'CSK'){\n                state.csk.splice(data.index, 1)\n            }else{\n                state.rcb.splice(data.index, 1)\n            }\n        }\n    }\n})"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,aAAa;AAC9B,eAAe,IAAIF,IAAI,CAACG,KAAK,CAAC;EAC1BF,KAAK;EACLG,KAAK,EAAC;IACFC,QAAQ,EAAC,EAAE;IACXC,GAAG,EAAC,EAAE;IACNC,GAAG,EAAC;EACR,CAAC;EACDC,OAAO,EAAC,CAAC,CAAC;EACVC,OAAO,EAAC;IACJC,WAAWA,CAACC,OAAO,EAAC;MAChBA,OAAO,CAACC,MAAM,CAAC,aAAa,CAAC;IACjC,CAAC;IACDC,aAAaA,CAACF,OAAO,EAACT,IAAI,EAAC;MACvBS,OAAO,CAACC,MAAM,CAAC,mBAAmB,EAAEV,IAAI,CAAC;MACzCS,OAAO,CAACC,MAAM,CAAC,sBAAsB,EAAEV,IAAI,CAACY,KAAK,CAAC;MAClD;IACJ,CAAC;;IACDC,cAAcA,CAACJ,OAAO,EAAET,IAAI,EAAC;MACzBS,OAAO,CAACC,MAAM,CAAC,eAAe,EAACV,IAAI,CAAC;MACpCS,OAAO,CAACC,MAAM,CAAC,uBAAuB,EAACV,IAAI,CAAC;IAChD;EACJ,CAAC;EACDc,SAAS,EAAC;IACNC,WAAWA,CAACb,KAAK,EAAC;MACdA,KAAK,CAACC,QAAQ,GAAGH,IAAI,CAACQ,WAAW,EAAE;IACvC,CAAC;IACDQ,iBAAiBA,CAACd,KAAK,EAAEF,IAAI,EAAC;MAC1B,IAAGA,IAAI,CAACiB,IAAI,IAAI,KAAK,EAAC;QAClBf,KAAK,CAACE,GAAG,CAACc,IAAI,CAAChB,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACY,KAAK,CAAC,CAAC;MAC9C,CAAC,MAAI;QACDV,KAAK,CAACG,GAAG,CAACa,IAAI,CAAChB,KAAK,CAACC,QAAQ,CAACH,IAAI,CAACY,KAAK,CAAC,CAAC;MAC9C;IACJ,CAAC;IACDO,oBAAoBA,CAACjB,KAAK,EAACU,KAAK,EAAC;MAC7BV,KAAK,CAACC,QAAQ,CAACS,KAAK,CAAC,CAACQ,QAAQ,GAAG,IAAI;IACzC,CAAC;IACDC,qBAAqBA,CAACnB,KAAK,EAACF,IAAI,EAAC;MAC7BE,KAAK,CAACC,QAAQ,CAACmB,OAAO,CAAEC,OAAO,IAAK;QAChC;QACA;QACA;QACA;QACA;QACAA,OAAO,CAACC,EAAE,KAAKxB,IAAI,CAACyB,MAAM,CAACD,EAAE,GAAGD,OAAO,CAACH,QAAQ,GAAG,KAAK,GAAG,EAAE;MACjE,CAAC,CAAC;IACN,CAAC;IACDM,aAAaA,CAACxB,KAAK,EAAEF,IAAI,EAAC;MACtB,IAAGA,IAAI,CAACiB,IAAI,IAAI,KAAK,EAAC;QAClBf,KAAK,CAACE,GAAG,CAACuB,MAAM,CAAC3B,IAAI,CAACY,KAAK,EAAE,CAAC,CAAC;MACnC,CAAC,MAAI;QACDV,KAAK,CAACG,GAAG,CAACsB,MAAM,CAAC3B,IAAI,CAACY,KAAK,EAAE,CAAC,CAAC;MACnC;IACJ;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}